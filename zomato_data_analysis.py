# -*- coding: utf-8 -*-
"""zomato_data_analysis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1k5gAWVrrcgGynD7GhCo-osnfugjCBCzO
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

df=pd.read_csv('Zomato data .csv')
print(df)

# converting rating coloumn in appropriate form :removing /5
def handle_rating(value):
  value=str(value).split('/')
  value=value[0]
  return float(value)

df['rate']=df['rate'].apply(handle_rating)
print(df['rate'])

df.info()

"""# Majority Type of Resturants  """

df.head()

sns.countplot(x=df['listed_in(type)'])
plt.xlabel('type of resturant')
plt.ylabel('count')
plt.title('Majority type of resturant')

df.head()

df=pd.read_csv('Zomato data .csv')


grouped_data=df.groupby('listed_in(type)')['votes'].sum()
result=pd.DataFrame({'votes': grouped_data})
plt.plot(result,c="orange",marker="o")
plt.xlabel("Types of resturant",c="red",size=15)
plt.ylabel("Votes",c="green",size=15)
plt.title('Type of Resturant with Maximum Voting',c="blue")

df['rate']=df['rate'].apply(handle_rating)
plt.hist(df['rate'],bins=50)
plt.xlabel('Rating')
plt.ylabel('Count')
plt.title('Distribution of Ratings')
plt.show()

import plotly.express as px

fig = px.scatter(df, x='rate', y='votes',
                 hover_data=['name', 'listed_in(type)'],  # Add hover data
                 title='Relationship between Ratings and Votes')
fig.show()

# Interactive Visualization 2: Box plot with selectable restaurant types
restaurant_types = df['listed_in(type)'].unique()  # Get all unique restaurant types
fig = px.box(df, x='listed_in(type)', y='approx_cost(for two people)',
             color='listed_in(type)',  # Add color for distinction
             title='Cost Comparison by Restaurant Type')
# Add dropdown menu for selecting restaurant types
fig.update_layout(
    updatemenus=[
        dict(
            buttons=[
                dict(
                    args=[{'x': [df['listed_in(type)'][df['listed_in(type)'] == type]]}],  # Filter data
                    label=type,
                    method='restyle'
                ) for type in restaurant_types
            ],
            direction='down',
            pad={'r': 10, 't': 10},
            showactive=True,
            x=0.1,
            xanchor='left',
            y=1.1,
            yanchor='top'
        ),
    ]
)
fig.show()

couple_data = df['approx_cost(for two people)']
sns.countplot(x=couple_data, palette='viridis')
plt.xlabel('Approximate Cost for Two People', fontsize=12, color='red')
plt.ylabel('Number of Restaurants', fontsize=12, color='green')
plt.title('Distribution of Restaurant Costs', fontsize=14, color='purple')
plt.xticks(rotation=45, ha='right')
plt.tight_layout()
plt.show()

